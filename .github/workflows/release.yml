# .github/workflows/release.yml

name: Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # --- 桌面打包任务 (可以取消注释以恢复) ---
  build-desktop:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: yarn install

      - name: Build and Upload Desktop Release Asset
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version."
          releaseDraft: true
          prerelease: false

  # --- 安卓打包任务 (已修复签名问题) ---
  build-android:
    permissions:
      contents: write
    needs: build-desktop
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64
            rust_target: aarch64-linux-android
            # 修正：签名后的APK文件名会变化
            artifact_path: "src-tauri/gen/android/app/build/outputs/apk/release/app-aarch64-release-signed.apk"
          - target: x86_64
            rust_target: x86_64-linux-android
            # 修正：签名后的APK文件名会变化
            artifact_path: "src-tauri/gen/android/app/build/outputs/apk/release/app-x86_64-release-signed.apk"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "zulu"

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b

      # 关键修正：为安卓任务也安装Linux桌面依赖
      - name: Install Linux Desktop Dependencies for Tauri Action
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install Rust target
        run: rustup target add ${{ matrix.rust_target }}

      - name: Install frontend dependencies
        run: yarn install

      # 新增：解码并创建密钥库文件
      - name: Decode and Create Keystore
        # 确保secrets已设置
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ${{ github.workspace }}/release.jks

      - name: Build Signed Android App Manually
        # 将签名环境变量应用到这个构建步骤
        env:
          # 核心修正：仅在 secret 存在时才设置环境变量
          TAURI_ANDROID_KEYSTORE_PATH: ${{ secrets.KEYSTORE_BASE64 != '' && './release.jks' || '' }}
          TAURI_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          TAURI_ANDROID_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          TAURI_ANDROID_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          NDK_HOME: "${{ steps.setup-ndk.outputs.ndk-path }}"
        run: npx tauri android build --target ${{ matrix.target }}

      - name: Upload Android Release Asset
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distPath: ${{ matrix.artifact_path }}
          tagName: "app-v__VERSION__"
          releaseName: "App v__VERSION__"
          releaseDraft: true
          prerelease: false
