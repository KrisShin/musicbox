# .github/workflows/release.yml

name: Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # --- 任务1: 构建桌面应用 (已恢复) ---
  build-desktop:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri app
        # 这里我们不再使用tauri-action，而是手动构建并上传产物
        run: npx tauri build
      
      # 使用稳定可靠的 action-gh-release 来上传
      - name: Upload Desktop Release Asset
        uses: softprops/action-gh-release@v2
        # 只在main分支的推送上运行，避免在其他分支创建release
        if: github.ref == 'refs/heads/main'
        with:
          # 从 tauri.conf.json 读取版本号来创建标签
          tag_name: app-v${{ fromJson(steps.read-version.outputs.tauri-conf).version }}
          # 标记为草稿，以便手动检查后发布
          draft: true
          files: |
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe

  # --- 任务2: 构建安卓应用 ---
  build-android:
    permissions:
      contents: write
    # 依赖于桌面任务，确保Release已创建
    needs: build-desktop
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64
            rust_target: aarch64-linux-android
            artifact_path: "src-tauri/gen/android/app/build/outputs/apk/release/app-aarch64-release-unsigned.apk"
          - target: x86_64
            rust_target: x86_64-linux-android
            artifact_path: "src-tauri/gen/android/app/build/outputs/apk/release/app-x86_64-release-unsigned.apk"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Rust target
        run: rustup target add ${{ matrix.rust_target }}
        
      - name: Install frontend dependencies
        run: yarn install

      - name: Build Android App Manually
        run: |
          export NDK_HOME="${{ steps.setup-ndk.outputs.ndk-path }}"
          npx tauri android build --target ${{ matrix.target }}
        
      # 使用 action-gh-release 来上传安卓产物
      - name: Upload Android Release Asset
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          # 使用与桌面任务相同的标签
          tag_name: app-v${{ fromJson(steps.read-version.outputs.tauri-conf).version }}
          files: ${{ matrix.artifact_path }}